{"version":3,"sources":["actions/types.js","utils/utils.js","actions/actions.js","components/Spinner/Spinner.jsx","pages/SearchImages/SearchImages.jsx","reportWebVitals.js","reducers/index.js","pages/InputName/InputName.jsx","index.js"],"names":["SET_FIRST_NAME","FETCH_IMAGES","unsplash","Unsplash","accessKey","process","fetchImages","searchQuery","a","images","search","photos","then","toJson","json","results","type","types","payload","Spinner","show","className","CircularProgress","SearchImages","history","useHistory","dispatch","useDispatch","firstName","useSelector","state","rootReducer","useState","imageQuery","setImageQuery","loading","setLoading","useEffect","goBack","Typography","variant","component","gutterBottom","InputLabel","htmlFor","id","value","onChange","evt","target","style","width","Button","onClick","console","log","map","image","src","urls","regular","alt","alt_description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","InputName","setFirstName","push","AppWrapper","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","store","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.139face1.chunk.js","sourcesContent":["export const SET_FIRST_NAME = \"SET_FIRST_NAME\";\r\nexport const FETCH_IMAGES = \"FETCH_IMAGES\";\r\n","import Unsplash from \"unsplash-js\";\r\n\r\nexport const unsplash = new Unsplash({\r\n  accessKey: process.env.REACT_APP_UNSPLASH_ACCESS_KEY,\r\n});\r\n","import * as types from \"./types\";\r\nimport { unsplash } from \"../utils/utils\";\r\nimport { toJson } from \"unsplash-js\";\r\n\r\nexport const setFirstName = (firstName) => {\r\n  return {\r\n    type: types.SET_FIRST_NAME,\r\n    payload: firstName,\r\n  };\r\n};\r\n\r\nexport const fetchImages = async (searchQuery) => {\r\n  let images = [];\r\n  await unsplash.search\r\n    .photos(searchQuery)\r\n    .then(toJson)\r\n    .then((json) => {\r\n      if (json.results) {\r\n        images = json.results;\r\n      }\r\n    });\r\n  return {\r\n    type: types.FETCH_IMAGES,\r\n    payload: images,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport \"./Spinner.scss\";\r\n\r\nconst Spinner = ({ show = true }) => {\r\n  return (\r\n    show && (\r\n      <div className=\"Spinner\" data-testid=\"spinner\">\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MuiInput from \"@mui/material/Input\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { fetchImages } from \"../../actions/actions\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\n\r\nimport \"./SearchImages.scss\";\r\n\r\nconst SearchImages = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const firstName = useSelector((state) => state.rootReducer.firstName);\r\n  const images = useSelector((state) => state.rootReducer.images);\r\n\r\n  const [imageQuery, setImageQuery] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!firstName) {\r\n      history.goBack();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [images]);\r\n\r\n  const handleChange = (evt) => {\r\n    setImageQuery(evt.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setLoading(true);\r\n    dispatch(fetchImages(imageQuery));\r\n  };\r\n\r\n  const renderImages = () => {\r\n    if (loading) {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <div className=\"SearchImages__images-container\">\r\n          {console.log(\"abcabc\", images)}\r\n          {images &&\r\n            images.map((image) => {\r\n              return (\r\n                <div key={image.id} className=\"SearchImages__image-wrapper\">\r\n                  <img\r\n                    className=\"SearchImages__image\"\r\n                    src={image.urls.regular}\r\n                    alt={image.alt_description}\r\n                    width=\"50%\"\r\n                    data-testid=\"searchimages__image\"\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SearchImages__wrapper\">\r\n      <div className=\"SearchImages__title\" data-testid=\"searchimages__title\">\r\n        <Typography variant=\"h3\" component=\"div\" gutterBottom>\r\n          Hello, {firstName}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className=\"SearchImages__search-box\">\r\n        <InputLabel\r\n          htmlFor=\"search-images__search-box\"\r\n          data-testid=\"searchimages__input-label\"\r\n        >\r\n          Search image\r\n        </InputLabel>\r\n        <MuiInput\r\n          id=\"search-images__search-box\"\r\n          variant=\"outlined\"\r\n          value={imageQuery}\r\n          onChange={handleChange}\r\n          style={{ width: \"100%\" }}\r\n          data-testid=\"searchimages__input-box\"\r\n        />\r\n      </div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={handleSearch}\r\n        data-testid=\"searchimages__button\"\r\n      >\r\n        Search\r\n      </Button>\r\n\r\n      {renderImages()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchImages;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../actions/types\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  images: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.SET_FIRST_NAME:\r\n      return {\r\n        ...state,\r\n        firstName: action.payload,\r\n      };\r\n    case types.FETCH_IMAGES:\r\n      return {\r\n        ...state,\r\n        images: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  rootReducer,\r\n});\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MuiInput from \"@mui/material/Input\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { setFirstName } from \"../../actions/actions\";\r\n\r\nimport \"./InputName.scss\";\r\n\r\nconst InputName = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const firstName = useSelector((state) => state.rootReducer.firstName);\r\n\r\n  const handleChange = (evt) => {\r\n    dispatch(setFirstName(evt.target.value));\r\n  };\r\n\r\n  const handleProceed = () => {\r\n    history.push(\"/images\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"InputName__wrapper\">\r\n      <div className=\"InputName__title\" data-testid=\"inputname__title\">\r\n        <Typography variant=\"h4\" component=\"div\" gutterBottom>\r\n          Welcome 😊\r\n        </Typography>\r\n      </div>\r\n      <div className=\"InputName__input-box\">\r\n        <InputLabel\r\n          htmlFor=\"input-box__first-name\"\r\n          data-testid=\"inputname__input-label\"\r\n        >\r\n          Set Your First Name\r\n        </InputLabel>\r\n        <MuiInput\r\n          id=\"input-box__first-name\"\r\n          variant=\"outlined\"\r\n          value={firstName}\r\n          onChange={handleChange}\r\n          data-testid=\"inputname__input-box\"\r\n        />\r\n      </div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={handleProceed}\r\n        data-testid=\"inputname__button\"\r\n      >\r\n        Proceed\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputName;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SearchImages from \"./pages/SearchImages/SearchImages\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport ReduxPromise from \"redux-promise\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/index\";\nimport InputName from \"./pages/InputName/InputName\";\n\nimport \"./index.css\";\n\nconst AppWrapper = () => {\n  const createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\n  return (\n    <BrowserRouter>\n      <Provider store={createStoreWithMiddleware(rootReducer)}>\n        <Switch>\n          <Route exact path=\"/\" component={InputName} />\n          <Route exact path=\"/images\" component={SearchImages} />\n        </Switch>\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}